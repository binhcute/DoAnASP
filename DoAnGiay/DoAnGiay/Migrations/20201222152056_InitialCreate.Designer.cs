// <auto-generated />
using System;
using DoAnGiay.Areas.Admin.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace DoAnGiay.Migrations
{
    [DbContext(typeof(DPContext))]
    [Migration("20201222152056_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("DoAnGiay.Areas.Admin.Models.AccountModel", b =>
                {
                    b.Property<int>("IdAccount")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AccountName")
                        .IsRequired()
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<int>("IdRoles")
                        .HasColumnType("int");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<int?>("RolesModelIdRoles")
                        .HasColumnType("int");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.HasKey("IdAccount");

                    b.HasIndex("RolesModelIdRoles");

                    b.ToTable("Account");
                });

            modelBuilder.Entity("DoAnGiay.Areas.Admin.Models.AdminModel", b =>
                {
                    b.Property<int>("IdAdmin")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AccountIdAccount")
                        .HasColumnType("int");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(300)")
                        .HasMaxLength(300);

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(300)")
                        .HasMaxLength(300);

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("nvarchar(10)")
                        .HasMaxLength(10);

                    b.HasKey("IdAdmin");

                    b.HasIndex("AccountIdAccount");

                    b.ToTable("Admin");
                });

            modelBuilder.Entity("DoAnGiay.Areas.Admin.Models.ColorModel", b =>
                {
                    b.Property<int>("IdColor")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.HasKey("IdColor");

                    b.ToTable("Color");
                });

            modelBuilder.Entity("DoAnGiay.Areas.Admin.Models.CommentModel", b =>
                {
                    b.Property<int>("IdComment")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("IdShoe")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(300)")
                        .HasMaxLength(300);

                    b.HasKey("IdComment");

                    b.HasIndex("IdShoe");

                    b.ToTable("Comment");
                });

            modelBuilder.Entity("DoAnGiay.Areas.Admin.Models.MaterialModel", b =>
                {
                    b.Property<int>("IdMaterial")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdMaterial");

                    b.ToTable("MaterialModel");
                });

            modelBuilder.Entity("DoAnGiay.Areas.Admin.Models.OrderDetailsModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Count")
                        .HasColumnType("int");

                    b.Property<int>("IdOrder")
                        .HasColumnType("int");

                    b.Property<int>("IdShoe")
                        .HasColumnType("int");

                    b.Property<int?>("OrderIdOrder")
                        .HasColumnType("int");

                    b.Property<int?>("ShoeIdShoe")
                        .HasColumnType("int");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.Property<decimal>("SumMoney")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("OrderIdOrder");

                    b.HasIndex("ShoeIdShoe");

                    b.ToTable("OrderDetail");
                });

            modelBuilder.Entity("DoAnGiay.Areas.Admin.Models.OrderModel", b =>
                {
                    b.Property<int>("IdOrder")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(300)")
                        .HasMaxLength(300);

                    b.Property<string>("Date")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(300)")
                        .HasMaxLength(300);

                    b.Property<int>("IdUser")
                        .HasColumnType("int");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("nvarchar(10)")
                        .HasMaxLength(10);

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.Property<int?>("UserIdUser")
                        .HasColumnType("int");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.HasKey("IdOrder");

                    b.HasIndex("UserIdUser");

                    b.ToTable("Order");
                });

            modelBuilder.Entity("DoAnGiay.Areas.Admin.Models.ProducerModel", b =>
                {
                    b.Property<int>("IdPro")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Infor")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.HasKey("IdPro");

                    b.ToTable("Producer");
                });

            modelBuilder.Entity("DoAnGiay.Areas.Admin.Models.RolesModel", b =>
                {
                    b.Property<int>("IdRoles")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdRoles");

                    b.ToTable("Roles");
                });

            modelBuilder.Entity("DoAnGiay.Areas.Admin.Models.ShoeModel", b =>
                {
                    b.Property<int>("IdShoe")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Colors")
                        .HasColumnType("int");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Img")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<int>("Materials")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("NumberSeri")
                        .IsRequired()
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("Pro")
                        .HasColumnType("int");

                    b.Property<bool>("Shoelate")
                        .HasColumnType("bit");

                    b.Property<int>("Sizes")
                        .HasColumnType("int");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.Property<bool>("Version")
                        .HasColumnType("bit");

                    b.Property<string>("Video")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.HasKey("IdShoe");

                    b.HasIndex("Colors");

                    b.HasIndex("Materials");

                    b.HasIndex("Pro");

                    b.HasIndex("Sizes");

                    b.HasIndex("Type");

                    b.ToTable("Shoe");
                });

            modelBuilder.Entity("DoAnGiay.Areas.Admin.Models.SizeModel", b =>
                {
                    b.Property<int>("IdSize")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("NumSize")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdSize");

                    b.ToTable("Size");
                });

            modelBuilder.Entity("DoAnGiay.Areas.Admin.Models.TypeShoeModel", b =>
                {
                    b.Property<int>("IdType")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.HasKey("IdType");

                    b.ToTable("TypeShoe");
                });

            modelBuilder.Entity("DoAnGiay.Areas.Admin.Models.UserModel", b =>
                {
                    b.Property<int>("IdUser")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AccountIdAccount")
                        .HasColumnType("int");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(300)")
                        .HasMaxLength(300);

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(300)")
                        .HasMaxLength(300);

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("nvarchar(10)")
                        .HasMaxLength(10);

                    b.HasKey("IdUser");

                    b.HasIndex("AccountIdAccount");

                    b.ToTable("User");
                });

            modelBuilder.Entity("DoAnGiay.Areas.Admin.Models.AccountModel", b =>
                {
                    b.HasOne("DoAnGiay.Areas.Admin.Models.RolesModel", null)
                        .WithMany("Accounts")
                        .HasForeignKey("RolesModelIdRoles");
                });

            modelBuilder.Entity("DoAnGiay.Areas.Admin.Models.AdminModel", b =>
                {
                    b.HasOne("DoAnGiay.Areas.Admin.Models.AccountModel", "Account")
                        .WithMany("Admins")
                        .HasForeignKey("AccountIdAccount");
                });

            modelBuilder.Entity("DoAnGiay.Areas.Admin.Models.CommentModel", b =>
                {
                    b.HasOne("DoAnGiay.Areas.Admin.Models.ShoeModel", "Shoe")
                        .WithMany("Comment")
                        .HasForeignKey("IdShoe")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("DoAnGiay.Areas.Admin.Models.OrderDetailsModel", b =>
                {
                    b.HasOne("DoAnGiay.Areas.Admin.Models.OrderModel", "Order")
                        .WithMany()
                        .HasForeignKey("OrderIdOrder");

                    b.HasOne("DoAnGiay.Areas.Admin.Models.ShoeModel", "Shoe")
                        .WithMany()
                        .HasForeignKey("ShoeIdShoe");
                });

            modelBuilder.Entity("DoAnGiay.Areas.Admin.Models.OrderModel", b =>
                {
                    b.HasOne("DoAnGiay.Areas.Admin.Models.UserModel", "User")
                        .WithMany()
                        .HasForeignKey("UserIdUser");
                });

            modelBuilder.Entity("DoAnGiay.Areas.Admin.Models.ShoeModel", b =>
                {
                    b.HasOne("DoAnGiay.Areas.Admin.Models.ColorModel", "Color")
                        .WithMany("Shoes")
                        .HasForeignKey("Colors")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DoAnGiay.Areas.Admin.Models.MaterialModel", "Material")
                        .WithMany("Shoes")
                        .HasForeignKey("Materials")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DoAnGiay.Areas.Admin.Models.ProducerModel", "Producer")
                        .WithMany("Shoes")
                        .HasForeignKey("Pro")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DoAnGiay.Areas.Admin.Models.SizeModel", "Size")
                        .WithMany("Shoes")
                        .HasForeignKey("Sizes")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DoAnGiay.Areas.Admin.Models.TypeShoeModel", "TypeShoe")
                        .WithMany("Shoes")
                        .HasForeignKey("Type")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("DoAnGiay.Areas.Admin.Models.UserModel", b =>
                {
                    b.HasOne("DoAnGiay.Areas.Admin.Models.AccountModel", "Account")
                        .WithMany("Users")
                        .HasForeignKey("AccountIdAccount");
                });
#pragma warning restore 612, 618
        }
    }
}
